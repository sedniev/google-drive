{"version":3,"sources":["./src/environments/environment.ts","./src/app/test/test.component.ts","./src/app/test/test.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;ACR5D,MAAM,aAAa;IAExB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0EALU,aAAa;6FAAb,aAAa;QCP1B,oEAAG;QAAA,sEAAW;QAAA,4DAAI;;;;;;;;;;;;;;;;;;;;;;ACSX,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,cAAc,CAAC;QAChB,cAAS,GAAY,KAAK,CAAC,CAAC,4CAA4C;KAsDhF;IAjDC,uDAAuD;IACvD,IAAI;IAEJ,IAAI;QACF,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;QACnB,iBAAiB;QACjB,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,0BAA0B;IAC1B,8BAA8B;IAC9B,+BAA+B;IAC/B,8BAA8B;IAC9B,YAAY;IACZ,IAAI;IAEE,cAAc;;YAClB,2CAA2C;YAC3C,+CAA+C;YAC/C,MAAM,KAAK,GAAG,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;gBACpC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;YAC9B,CAAC,CAAC,CAAC;YAEH,yDAAyD;YACzD,wCAAwC;YACxC,OAAO,KAAK,CAAC,IAAI,CAAC,GAAS,EAAE,CAAC;gBAC5B,MAAM,IAAI,CAAC,KAAK;qBACb,IAAI,CAAC,EAAE,SAAS,EAAE,0EAA0E,EAAE,CAAC;qBAC/F,IAAI,CAAC,IAAI,CAAC,EAAE;oBACX,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;oBACtB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBAC3B,CAAC,CAAC,CAAC;YACP,CAAC,EAAC,CAAC;QACL,CAAC;KAAA;IAEK,YAAY;;YAChB,kCAAkC;YAClC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBACnB,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;aAC7B;YAED,mCAAmC;YACnC,OAAO,IAAI,OAAO,CAAC,GAAS,EAAE,CAAC;gBAC7B,MAAM,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,IAAI,CACnC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,EACxB,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC;YACjC,CAAC,EAAC,CAAC;QACL,CAAC;KAAA;;wEAtDU,YAAY;4FAAZ,YAAY;QCTzB,4EAAyB;QAAjB,oIAAS,UAAM,IAAC;QAAC,+DAAI;QAAA,4DAAS;QAEtC,2EAA+B;;;;;;;;;;;;;;ACD/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACJ;AACP;AAC/C,WAAW;AACX,sBAAsB;AACtB,uBAAuB;AACvB,wBAAwB;AACxB,yBAAyB;AACzB,oBAAoB;AACpB,oBAAoB;AACpB,oBAAoB;AACkC;AACE;;;AAExD,+CAA+C;AAC/C,2FAA2F;AAC3F,iFAAiF;AACjF,aAAa;AACb,gDAAgD;AAChD,gBAAgB;AAChB,KAAK;AAEL,MAAM,MAAM,GAAW,EAAE;AAkBlB,MAAM,SAAS;;kEAAT,SAAS;wFAAT,SAAS,cAFR,2DAAY;6FADb,EAAE,YATJ;YACP,uEAAa;YACb,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC;YAC5B,4BAA4B;YAC5B,6BAA6B;YAC7B,+BAA+B;YAC/B,MAAM;YACN,oEAAgB;SACjB;mIAIU,SAAS,mBAflB,2DAAY;QACZ,kEAAa,aAGb,uEAAa;QAEb,4BAA4B;QAC5B,6BAA6B;QAC7B,+BAA+B;QAC/B,MAAM;QACN,oEAAgB;;;;;;;;;;;;;ACnCpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACO;AACA;;;AAGtD,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,kEAAa,EAAC;CACzC;AASM,MAAM,gBAAgB;;gFAAhB,gBAAgB;+FAAhB,gBAAgB;mGALlB;YACP,4DAAY;YACZ,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC;SAC7B;mIAEU,gBAAgB,cAJzB,4DAAY;;;;;;;;;;;;;;;;;;;ACb+B;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-test',\n  templateUrl: './test.component.html',\n  styleUrls: ['./test.component.scss']\n})\nexport class TestComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>test works!</p>\n","import { Component } from '@angular/core';\n// import { GoogleAuthService } from 'ng-gapi';\ndeclare let gapi:any;\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'google-drive';\n  public gapiSetup: boolean = false; // marks if the gapi library has been loaded\n  public authInstance: any;\n  public error: string;\n  public user: any;\n\n  // constructor(private googleAuth: GoogleAuthService){ \n  // }\n  \n  auth():void{\n    console.log('auth')\n    // this.signIn();\n    this.authenticate();\n  }\n\n  // public signIn(): void {\n  //   this.googleAuth.getAuth()\n  //       .subscribe((auth) => {\n  //           console.log(auth)\n  //       });\n  // }\n\n  async initGoogleAuth(): Promise<void> {\n    //  Create a new Promise where the resolve \n    // function is the callback passed to gapi.load\n    const pload = new Promise((resolve) => {\n      gapi.load('auth2', resolve);\n    });\n\n    // When the first promise resolves, it means we have gapi\n    // loaded and that we can call gapi.init\n    return pload.then(async () => {\n      await gapi.auth2\n        .init({ client_id: '223971077227-mfpp3qa0tlfs2mctcfhum5h4tbtv7aul.apps.googleusercontent.com' })\n        .then(auth => {\n          this.gapiSetup = true;\n          this.authInstance = auth;\n        });\n    });\n  }\n\n  async authenticate(): Promise<any> {\n    // Initialize gapi if not done yet\n    if (!this.gapiSetup) {\n      await this.initGoogleAuth();\n    }\n\n    // Resolve or reject signin Promise\n    return new Promise(async () => {\n      await this.authInstance.signIn().then(\n        user => this.user = user,\n        error => this.error = error);\n    });\n  }\n\n}\n","<button (click)=\"auth()\">auth</button>\n\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule, Routes } from '@angular/router'\nimport { AppComponent } from './app.component';\n// import {\n//   GoogleApiModule, \n//   GoogleApiService, \n//   GoogleAuthService, \n//   NgGapiClientConfig, \n//   NG_GAPI_CONFIG,\n//   GoogleApiConfig\n// } from \"ng-gapi\";\nimport { TestComponent } from './test/test.component';\nimport { AppRoutingModule } from './app-routing.module';\n\n// let gapiClientConfig: NgGapiClientConfig = {\n//   client_id: \"223971077227-mfpp3qa0tlfs2mctcfhum5h4tbtv7aul.apps.googleusercontent.com\",\n//   discoveryDocs: [\"https://people.googleapis.com/$discovery/rest?version=v1\"],\n//   scope: [\n//       \"https://www.googleapis.com/auth/drive\"\n//   ].join(\" \")\n// };\n\nconst routes: Routes = []\n@NgModule({\n  declarations: [\n    AppComponent,\n    TestComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(routes),\n    // GoogleApiModule.forRoot({\n    //   provide: NG_GAPI_CONFIG,\n    //   useValue: gapiClientConfig\n    // }),\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router'\nimport { TestComponent } from './test/test.component';\n\n\nconst routes: Routes = [\n  {path: 'test', component: TestComponent}\n]\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(routes),\n  ]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}